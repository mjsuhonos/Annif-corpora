    Over the last few decades, signal feature analysis has been significantly used in a wide variety of fields. While several techniques have been proposed in the area of signal feature extraction and classification, all of these techniques are achieved by using modern computers, which rely on softwares, such as MATLAB. However, in real-time applications or portable devices, software implementation is not enough by itself, and a hardware-software co-design or fully hardware implementation needs to be considered. The selection of the right signal feature analysis tool for an application depends not only on the software performance, but also on the hardware efficiency of a method. However, there is not enough studies in existence to provide comparison of these signal feature extraction methods from the hardware implentation aspect. Therefore, the objective of this thesis is to investigate both the hardware and algorithmic perspectives of three commonly used signal feature extraction techniques: Autoregressive (AR), pole modeling, and Mel-frequency Cepstral coefficients (MFCCs). To fulfill this objective, first, the hardware analysis of AR, pole modeling, and MFCC feature extraction methods is performed by calculating the computational complexity of the mathematical equations of each method. Second the FPGA area usage of each feature extraction methods is estimated. Third, algorithmic evaluation of these three methods is performed for audio scene analysis. Once the results are obtained from the above stages, the overall performance of each feature extraction method is compared in terms of both the hardware analysis and algorithmic performances. Finally, based on the performed comparison, pole modeling feature extraction approach is proposed as the suitable method for the audio scene analysis application. The suitable method (pole modeling feature extraction) + linear discriminant analysis (LDA) classifier are implemented in Altera DE2 Board using Altera Nios II soft-core processor. The audio classification accuracy obtained using this implementation is achieved to be equal to the MATLAB implementation. The classification time for one audio sample is determined to be 0.1s, which is fast enough to be considered as a real-time system for audio scene analysis application.
