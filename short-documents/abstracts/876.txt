    When a fault-tolerant layered distributed system continues its operation despite the presence of component failures, its performance is usually degraded. Its performance can also be degraded if it is executing continuously for a long period of time due to a phenomenon known as software aging. To prevent unexpected or unplanned outages due to aging, a pro-active technique called software rejuvenation can be employed. This technique involves gracefully terminating an application and immediately restarting it with a refreshed internal state. For proper modeling of these systems, their performance and dependiability characteristics need to be considered in a unified way, called performability. This thesis proposes a new model called "Rejuvenated-FTLQN", to evaluate the effects of software aging and rejuvenation on performability of these layered systems. Specifically a Layered Queueing Network (LQN) is used for performance analysis and a Multi State Fault Tree (MSFT) is used for dependability analysis. The model is also used to study the impact of performing rejuvenation, time to perform rejuvenation and rejuvenation frequencey on performability of a system. A software tool called "Rejuvenated-FTLQNS" has been developed to automate the model solution.
